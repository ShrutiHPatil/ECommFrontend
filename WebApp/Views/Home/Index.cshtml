﻿﻿@{
    ViewData["Title"] = "Shopping Site";

}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>


<script>
    // var baseUrl = '@ViewData["baseUrl"]';
    var baseUrl = "https://localhost:7272/api/";
    $(document).ready(function () {


        function getUserIdFromSession() {

            return @ViewContext.HttpContext.Session.GetInt32("UserId");
        }


        function addToCart(productId, quantity) {
            var userId = getUserIdFromSession();

            if (!userId) {
                alert('User not authenticated');
                return;
            }


            var data = {
                ProductId: productId,
                UserId: parseInt(userId),
                Quantity: parseInt(quantity),
            };


            $.ajax({
                url: baseUrl + 'Product/addToCart',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (response) {
                    console.log(response);

                },
                error: function (error) {
                    console.error('Error adding product to cart:', error);

                }
            });
        }


        function fetchProductData(sortBy, filterColor) {
            $.ajax({
                url: baseUrl + 'Product',
                type: 'GET',
                dataType: 'json',
                data: { sortBy: sortBy, filterColor: filterColor },
                success: function (products) {

                    if (sortBy === 'lowToHigh') {
                        products.sort((a, b) => a.price - b.price);
                    } else if (sortBy === 'highToLow') {
                        products.sort((a, b) => b.price - a.price);
                    }


                    if (filterColor) {
                        products = products.filter(product => product.color === filterColor);
                    }

                    displayProducts(products);
                },
                error: function (error) {
                    console.error('Error fetching product data:', error);
                }
            });
        }

        function checkUserSession() {
            $.ajax({
                url: '/Home/CheckSession',
                type: 'GET',
                success: function (response) {
                    if (!response.isAuthenticated) {
                        window.location.href = '/Home/Login'; // Redirect to login
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
        // Check session every 5 seconds
        setInterval(checkUserSession, 5000);

        function displayProducts(products) {
            var container = $("#productContainer");

            container.empty();

            products.forEach(function (product) {
                var imageUrl = product.imageUrl;

                var cardHtml = `
                            
                                <div class="productCard">
                                <div class="image">
                                    <img src="${imageUrl}" alt="${product.name}" width="200" height="300">
                                </div>
                                <div>
                                        <h6 class="productDetails">${product.name}</h6>
                                        <p class="productDetails">Price: $${product.price.toFixed(2)}</p>
                                </div>
                                <div class="addandquantity">
                                    <input type="number" class="quantityInput" value="1" min="1">
                                    <!-- Button to add product to cart -->
                                    <button class="addToCartBtn" data-product-id="${product.productId}">
                                        Add
                                    </button>
                                </div>
                                </div>
                           
                        `;

                container.append(cardHtml);
            });


            $(".addToCartBtn").on("click", function () {
                var productId = $(this).data("product-id");
                var quantityInput = $(this).closest(".productCard").find(".quantityInput");
                var addToCartMessage = $("#addToCartMessage");
                var popup = $("#popup");


                var quantity = parseInt(quantityInput.val()) || 1;

                console.log('Quantity:', quantity);

                if (quantity > 0) {
                    addToCart(productId, quantity);
                    addToCartMessage.text('Product added to the cart.');
                    popup.fadeIn();
                    quantityInput.val(1);

                    setTimeout(function () {
                        popup.fadeOut();
                    }, 3000);
                } else {
                    alert('Invalid quantity. Please enter a positive integer.');
                }
            });



        }


        function fetchCartItems() {
            var userId = getUserIdFromSession();

            if (!userId) {

                alert('User not authenticated');
                return;
            }


            $.ajax({
                url: baseUrl + 'Product/getCart?userId=' + userId,
                type: 'GET',
                success: function (cartItems) {
                    console.log('Cart Items:', cartItems);
                    displayCartItems(cartItems);
                },
                error: function (error) {
                    console.error('Error fetching cart items:', error);
                }
            });
        }


        function displayCartItems(cartItems) {
            var cartItemsContainer = $("#cartItemsContainer");
            cartItemsContainer.empty();

            var totalAmount = 0;

            cartItems.forEach(function (cartItem) {
                var imageUrl = cartItem.imageUrl;
                var subtotal = cartItem.quantity * cartItem.price;
                totalAmount += subtotal;

                var cartItemHtml = `
                        <div>

                            <div class="productCardItem">
                                <img src="${imageUrl}" alt="${cartItem.name}" width="200" height="230">
                                Product: ${cartItem.name},
                                Quantity: ${cartItem.quantity},
                                Subtotal: $${subtotal.toFixed(2)}
                                   <div class="quantity">
                                    <button class="removeQuantityBtn" data-product-id="${cartItem.productId}">
                                        -
                                    </button>
                                        <button class="addQuantityBtn" data-product-id="${cartItem.productId}">
                                            +
                                        </button>
                                        </div>
                                    <button class="removeFromCartBtn" data-product-id="${cartItem.productId}">
                                    Remove
                                </button>
                            </div>


                        </div>
                    `;
                cartItemsContainer.append(cartItemHtml);
            });



            var totalAmountHtml = `
                    <div>
                        <strong>Total Amount:</strong> $${totalAmount.toFixed(2)}
                    </div>
                `;
            cartItemsContainer.append(totalAmountHtml);




            $(".proceedToPaymentBtn").on("click", function () {

                var redirectionPopup = $("#redirectionPopup");
                var popup = $("#popup");
                redirectionPopup.text('Redirecting to payment...').fadeIn();


                setTimeout(function () {

                    redirectionPopup.text('Redirected to payment!');


                    setTimeout(function () {
                        redirectionPopup.fadeOut();
                    }, 2000);
                }, 2000);
            });





            $(".removeQuantityBtn").on("click", function () {
                var productId = $(this).data("product-id");


                var cartItem = cartItems.find(item => item.productId === productId);
                if (cartItem && cartItem.quantity > 1) {

                    updateCartItemQuantity(productId, 1);
                }
            });

            $(".addQuantityBtn").on("click", function () {
                var productId = $(this).data("product-id");


                var cartItem = cartItems.find(item => item.productId === productId);
                if (cartItem && cartItem.quantity > 0) {

                    updateCartItemQuantity(productId, -1);
                }
            });






            $(".removeFromCartBtn").on("click", function () {
                var productId = $(this).data("product-id");
                var userId = getUserIdFromSession();
                var removeFromCartMessage = $("#removeFromCartMessage");
                var removeFromCartPopup = $("#popupremove");

                if (!userId) {
                    alert('User not authenticated');
                    return;
                }


                $.ajax({
                    url: baseUrl + 'Product/removeFromCart/' + productId + '?userId=' + userId,
                    type: 'DELETE',
                    success: function (response) {
                        console.log(response);
                        removeFromCartMessage.text('Product removed from the cart.');

                        removeFromCartPopup.fadeIn();

                        setTimeout(function () {
                            removeFromCartPopup.fadeOut();
                        }, 3000);
                        fetchCartItems();
                    },
                    error: function (error) {
                        console.error('Error removing product from cart:', error);
                    }
                });
            });
        }
        function updateCartItemQuantity(productId, quantity) {
            console.log('Updating quantity:', productId, quantity);
            var userId = getUserIdFromSession();

            if (!userId) {
                alert('User not authenticated');
                return;
            }

            var data = {
                ProductId: productId,
                UserId: parseInt(userId),
                Quantity: quantity,
            };

            $.ajax({
                url: baseUrl + 'Product/updateCartItemQuantity',
                type: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (response) {
                    console.log(response);


                    fetchCartItems();
                },
                error: function (error) {
                    console.error('Error updating product quantity in cart:', error);
                }
            });
        }


        function getUserIdFromSession() {

            return @ViewContext.HttpContext.Session.GetInt32("UserId");
        }


        var username = '@ViewContext.HttpContext.Session.GetString("Name")';
        $('#usernameDisplay').text(username);


        $('#userIcon').on('click', function () {
            $('#userInfoModal').modal('show');
        });


        // $('#signOutBtn').on('click', function () {
        //     console.log("hi");
        //     console.log(@ViewContext.HttpContext.Session.GetInt32("UserId"));
        //     // sessionStorage.removeItem('userId');
        //     // sessionStorage.removeItem('username');
        //     // sessionStorage.clear();
        //      @{
        //         ViewContext.HttpContext.Session.Clear();

        //     }


        //window.location.href = 'https://localhost:7092/';
    });

    $("#cartButton").on("click", function () {
        fetchCartItems();
    });



    $("#cartButton").on("click", function () {
        fetchCartItems();
    });


    $("#sortDropdown").on("change", function () {
        var selectedSortBy = $(this).val();
        var selectedColor = $("#colorDropdown").val();
        fetchProductData(selectedSortBy, selectedColor);
    });


    $("#colorDropdown").on("change", function () {
        var selectedColor = $(this).val();
        var selectedSortBy = $("#sortDropdown").val();
        fetchProductData(selectedSortBy, selectedColor);
    });


    fetchProductData(null, null);
        });

</script>
<style>
   /*  .productCard {
        border: 1px solid #ddd;
        height: 400px;
        width: 250px;
        margin: 30px;
        border-radius: 10px;
        background-color: #ffe6b3;
        border-bottom: 1px solid #ddd;
        padding-bottom: 10px;
        margin-bottom: 10px;
    } */


    .productCardItem {
        border: 1px solid #ddd;
        height: 350px;
        width: 250px;
        margin: 15px;
        border-radius: 10px;
        background-color: #e6e6ff;
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        border-bottom: 1px solid #ffe0b3;
        padding-bottom: 10px;
        margin-bottom: 10px;
    }

    .quantity {
        display: flex;
        flex-direction: row;
        justify-content: center;
        column-gap: 5px;
        width: 200px;
    }

    .image {
        justify-content: center;
        display: flex;
        padding-top: 21px;
        padding-bottom: 10px
    }

    .addandquantity {
        display: flex;
        justify-content: center;
    }

    .productDetails {
        justify-content: center;
        display: flex;
        padding-right: 21px;
    }
    removeQuantityBtn {
        /*  position: absolute;
            bottom: 22px;
            left: 50px;
            width: 40px;
            height: 20px;
            font-size: 12px; */
    }

    .addQuantityBtn {
        /* position: absolute;

            left: 173px;
             margin-left: 3px;
            bottom: 40px;
            right: 12px;
            width: 50px;
            height: 25px;
            border-color: #ffe6b3;
            border-radius: 4px */
    }

    .removeFromCartBtn {
        position: absolute;
        bottom: 0;
    }

   /*  .quantityInput {
        position: absolute;
        bottom: 22px;
        left: 50px;
        width: 40px;
        height: 20px;
        font-size: 12px;
    }


    .addToCartBtn {
        position: absolute;
        bottom: 22px;
        right: 12px;
        width: 80px;
        height: 25px;
        border-color: #ffe6b3;
        border-radius: 4px;
    } */

    .productCard {
        display: flex;
        flex-direction: column;
         justify-content: space-between; */ /* Adjusts children spacing */
        
        border: 1px solid #ddd;
        height: auto; /* Flexible height */
        width: 250px;
        margin: 13px;
        border-radius: 10px;
        background-color: #e6e6ff;
        padding-bottom: 10px;
        margin-bottom: 10px;
    }

    .addToCartBtn {
        /* Remove absolute positioning */
        width: 60px;
        height: 25px;
        border-color: #ffe6b3;
        border-radius: 4px;
        font-size: 12px;
        right: 12px;
        padding: 4px;
        margin: 5px; /* Add some margin for spacing */
    }

    .quantityInput {
        width: 60px;
        height: 25px;
        border-color: #ffe6b3;
        border-radius: 4px;
        font-size: 12px;
        margin: 5px; /* Add some margin for spacing */
    }

    .popup {
        display: none;
        position: fixed;
        /*  top: 50%; */
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #fff;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        z-index: 999;
    }

    .popup-message {
        display: block;
        font-size: 16px;
        color: #333;
    }

    .popupremove {
        display: none;
        position: fixed;
        /*  top: 50%; */
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #fff;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        z-index: 999;
    }




    .popup-remove {
        display: block;
        font-size: 16px;
        color: #333;
    }


    body {
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
    }

    .navbar {
        margin-bottom: 0;
        color: burlywood
    }

    .nav {
        margin-bottom: 0;
        color: burlywood
    }

    .text-center {
        text-align: center;
    }

    #productContainer {
        margin: 0;
    }

    .modal-body {
        padding: 0;
    }

    #navbar-dark {
        background: burlywood;
    }

    .modal.fade {
        left: auto;
        right: 0;
        transform: translateX(0) !important;
    }

    .userInfoModal {
        width: 159px;
    }

    #colorDropdown {
        margin-top: 21px;
    }

    #customModalContent {
        position: fixed;
        margin: 0;
        top: 0;
        right: 0;
        margin-right: 1%;
        transform: translateX(0%);
    }

    #cartItemsContainer {
        flex-grow: 1;
        overflow-y: auto;
        text-align: center;
    }

    #user {
        position: absolute;
        margin: 0;
        top: 55px;
        /* right: 191px; */
        right:5%;
        margin-right: 1%;
        transform: translateX(0%);
    }

    .navbar {
        background-color: #ffe6b3;
    }

    .selectoptions{
        /* height:"5%"; */
        width:"3%";
    }
    .Navigation{
        top: 0;
        position: sticky;
        background-color:#F4F4F4;
        padding-bottom:70px;
    }
    .custom-dropdown {
        position: relative;
        display:inline-flex;
    }

        .custom-dropdown select {
            width: auto;
            padding: 8px;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
        }

            .custom-dropdown select:focus {
                outline: none;
                border-color: #007bff; /* Change the border color on focus if needed */
            }
.filters{
        top: 56px;
        margin-top:-50px;
        position: sticky;
        
        padding-bottom: 20px;
        
}

    .modal-content{
        z-index:auto;
    }

    .modal-backdrop.show {
        display: none;
        z-index: -1;
        width:50%;
    }

    #sortDropdown{
        width: 100px;
    }

</style>
<body>
    <div class="Navigation">
    <nav class="navbar navbar-light bg-light">
        <span class="navbar-brand mb-0 h1">Shopping Site</span>
        <div class="ml-auto user-icon" id="userIcon">

            <img src="https://th.bing.com/th/id/OIP.f3DM2upCo-p_NPRwBAwbKQHaHa?w=202&h=202&c=7&r=0&o=5&dpr=1.6&pid=1.7" ; style="height:30px;" alt="User Icon">
        </div>
        <button id="cartButton" data-toggle="modal" data-target="#cartModal">
            Cart
        </button>
    </nav>
    <div class="modal" id="userInfoModal" tabindex="-1" role="dialog" aria-labelledby="userInfoModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document" id="user">
            <div class="modal-content modal-sm">
                <div class="modal-header">
                    <h5 class="modal-title" id="userInfoModalLabel">User</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <p>  <span id="usernameDisplay"></span>!</p>
                </div>
                <div class="modal-footer">

                    <a asp-action="SignOut" asp-controller="Home" id="signOutBtn">Sign Out</a>
                </div>
            </div>
        </div>
    </div>
    </div>

    <div class="modal fade" id="cartModal" tabindex="-1" role="dialog" aria-labelledby="cartModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-right modal-lg" role="document" id="customModalContent">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="cartModalLabel">Shopping Cart</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="cartItemsContainer">
                </div>
                <div class="modal-footer">
                    <button class="proceedToPaymentBtn">Proceed to Payment</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <div id="redirectionPopup" style="display: none;"></div>
                </div>
            </div>
        </div>
    </div>

    <div class="filters">
    <label for="colorDropdown" class="form-label"></label>
    <div class="custom-dropdown">
    <select id="colorDropdown">
        <option  value="">Filter</option>
        <option  value="Blue">Blue</option>
        <option  value="Gold">Gold</option>
        <option  value="Red">Red</option>
        <option  value="White">White</option>
        <option  value="Gray">Gray</option>
        <option  value="Yellow">Yellow</option>
        <option  value="Green">Green</option>
        <option  value="Pink">Pink</option>
    </select>
    </div>
    <div class="custom-dropdown">

    <select id="sortDropdown">
        <option value="default">Sort By</option>
        <option value="lowToHigh">Low to High</option>
        <option value="highToLow">High to Low</option>
    </select>
    </div>
    </div>
    
    <div id="popup" class="popup">
        <span class="popup-message" id="addToCartMessage"></span>

        @* <span class="popup-message" id="redirectionPopup"></span> *@
    </div>
    <div id="popupremove" class="popupremove">

        <span class="popup-remove" id="removeFromCartMessage"></span>
        @* <span class="popup-message" id="redirectionPopup"></span> *@
    </div>


    <div id="productContainer" class="row">

    </div>
 </div>
</body>
